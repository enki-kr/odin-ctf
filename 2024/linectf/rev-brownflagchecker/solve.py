import binascii
from Cryptodome.Cipher import AES

def aes_cbc_encrypt(data, key, iv):
    encrypted_data = b""
    cipher = AES.new(key, AES.MODE_CBC, iv)
    for i in range(0, len(data), 16):
        encrypted_block = cipher.encrypt(data[i:i+16])
        cipher = AES.new(key, AES.MODE_CBC, encrypted_block) 
        encrypted_data += encrypted_block
    return encrypted_data


def aes_cbc_decrypt(data, key, iv):
    decrypted_data = b""
    cipher = AES.new(key, AES.MODE_CBC, iv)
    for i in range(0, len(data), 16):
        decrypted_block = cipher.decrypt(data[i:i+16])
        cipher = AES.new(key, AES.MODE_CBC, data[i:i+16])
        decrypted_data += decrypted_block
    return decrypted_data


keys = [
    [0xD9, 0xAE, 0xCB, 0x5A, 0xD8, 0xFC, 0x84, 0xF3, 0xAA, 0xC5, 0x8B, 0x9D, 0x08, 0x2D, 0x1D, 0x8F],
    [0xF5, 0x18, 0xB9, 0x72, 0x69, 0x4C, 0x79, 0xCC, 0xC4, 0x13, 0x8B, 0xE0, 0x39, 0x66, 0x9E, 0x59],
    [0xCF, 0x74, 0x4D, 0xEF, 0x49, 0xBB, 0x74, 0xAA, 0x96, 0x6E, 0xE7, 0xF5, 0x63, 0x09, 0x67, 0x89],
    [0x69, 0x9E, 0xBB, 0x61, 0x9F, 0xAB, 0x1C, 0x14, 0x3C, 0x8E, 0x09, 0xC3, 0x36, 0xFC, 0xF8, 0xF8],
    [0x60, 0x3A, 0xE7, 0x7B, 0x24, 0xDA, 0x70, 0x6F, 0x99, 0x2A, 0xEE, 0xB2, 0x1A, 0x96, 0xC6, 0x33],
    [0x6E, 0x31, 0xFA, 0x55, 0xE0, 0x39, 0x27, 0xFA, 0x2B, 0x90, 0x78, 0xB6, 0xC6, 0x72, 0x69, 0xDF],
    [0xCB, 0xDD, 0x86, 0x3E, 0x1F, 0x03, 0xE5, 0x2F, 0xA3, 0xB1, 0xD7, 0xF4, 0x6E, 0xA8, 0x30, 0xD0],
    [0x2E, 0x44, 0xD1, 0x84, 0xE7, 0x05, 0x4A, 0x7A, 0xA7, 0x67, 0x53, 0x8A, 0xD3, 0xCA, 0x61, 0xD9],
    [0x72, 0x5E, 0xA8, 0x4D, 0x26, 0x47, 0x8D, 0xAF, 0xA6, 0x8E, 0xAD, 0x9B, 0xFD, 0xBE, 0x52, 0x6F],
        
]
data = [
    [0x62, 0x4E, 0xB3, 0x30, 0xD7, 0x63, 0x9B, 0x94, 0x5C, 0xEC, 0x45, 0x15, 0xC7, 0xF5, 0x53, 0x58],
    [0xF5, 0xD1, 0x5C, 0x5A, 0xB2, 0xE9, 0x6B, 0x21, 0xE7, 0x2C, 0x74, 0xFA, 0x11, 0x00, 0x02, 0xDC],
    [0xE4, 0x49, 0x63, 0x70, 0xE9, 0x36, 0x53, 0x8D, 0x9C, 0x14, 0xCA, 0xF0, 0x03, 0xBC, 0x2B, 0x3D],
    [0x9E, 0xD6, 0x67, 0xB3, 0x8D, 0x13, 0x8D, 0xE7, 0x49, 0x73, 0x52, 0xF8, 0xB4, 0x56, 0xF8, 0x58],
    [0xBB, 0xBD, 0xAA, 0x45, 0x34, 0xCF, 0x75, 0xCA, 0xD7, 0xD3, 0x1C, 0x13, 0x05, 0x3E, 0x63, 0x4E],
    [0x01, 0x50, 0xB0, 0x60, 0x47, 0xE2, 0x0C, 0xF6, 0xA3, 0xBD, 0x9C, 0x41, 0xB0, 0x61, 0x9E, 0x34],
    [0xEF, 0xAF, 0xA1, 0x44, 0x7B, 0xC8, 0xDD, 0xF8, 0x1F, 0x9C, 0x3A, 0xF8, 0xCC, 0xC2, 0x57, 0x8B],
    [0x71, 0x29, 0x2C, 0x0E, 0x6B, 0x2F, 0x3F, 0x2F, 0xD9, 0x71, 0x11, 0xB2, 0x4B, 0x63, 0x42, 0xF4],
    [0xFB, 0xA7, 0x3C, 0xA3, 0xE8, 0x8D, 0x3C, 0x74, 0xDA, 0xCB, 0x32, 0x84, 0x85, 0xEC, 0x2A, 0xED]
]



for i in range(9):
    keys[i] = bytearray(keys[i])
    data[i] = bytearray(data[i])
    

user_input = b"A"*64
encrypted_data = aes_cbc_encrypt(user_input, keys[0], data[0])

for i in range(1, len(keys)):
    encrypted_data = aes_cbc_encrypt(encrypted_data, keys[i], data[i])
    
# print (encrypted_data)
# enc9 = encrypted_data

enc9 = bytearray([0xE2, 0x42, 0xF1, 0x42, 0x1D, 0x2A, 0xAE, 0xC7, 0xC1, 0xEC, 0x19, 0x6A,
	0x43, 0x45, 0x77, 0xE2, 0x05, 0xD3, 0x91, 0xE3, 0x72, 0x59, 0x6B, 0xAA,
	0x96, 0x41, 0x08, 0x4D, 0x8E, 0x91, 0x46, 0xF3, 0x5F, 0x86, 0xB2, 0x2A,
	0x05, 0xB2, 0x2A, 0x8A, 0x08, 0x9B, 0xFC, 0x66, 0x2B, 0x07, 0xE4, 0x3D,
	0xEC, 0x57, 0xFA, 0x1C, 0x8A, 0xFD, 0xBB, 0x08, 0x78, 0x06, 0xDB, 0x78,
	0x35, 0x4F, 0x5B, 0xE0])

decrypted_data = aes_cbc_decrypt(enc9, keys[8], data[8])

for i in range(7, -1, -1):
    decrypted_data = aes_cbc_decrypt(decrypted_data, keys[i], data[i])

print(decrypted_data)

